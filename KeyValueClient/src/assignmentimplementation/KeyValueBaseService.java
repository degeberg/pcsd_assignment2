
package assignmentimplementation;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "KeyValueBaseService", targetNamespace = "http://assignmentImplementation/")
@SOAPBinding(style = SOAPBinding.Style.RPC)
@XmlSeeAlso({
    ObjectFactory.class
})
public interface KeyValueBaseService {


    /**
     * 
     * @param arg0
     */
    @WebMethod
    @Action(input = "http://assignmentImplementation/KeyValueBaseService/dummyRequest", output = "http://assignmentImplementation/KeyValueBaseService/dummyResponse")
    public void dummy(
        @WebParam(name = "arg0", partName = "arg0")
        LengthPredicate arg0);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns assignmentimplementation.ValueListImplArray
     * @throws BeginGreaterThanEndException_Exception
     * @throws IOException_Exception
     * @throws ServiceNotInitializedException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://assignmentImplementation/KeyValueBaseService/atomicScanRequest", output = "http://assignmentImplementation/KeyValueBaseService/atomicScanResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://assignmentImplementation/KeyValueBaseService/atomicScan/Fault/IOException"),
        @FaultAction(className = BeginGreaterThanEndException_Exception.class, value = "http://assignmentImplementation/KeyValueBaseService/atomicScan/Fault/BeginGreaterThanEndException"),
        @FaultAction(className = ServiceNotInitializedException_Exception.class, value = "http://assignmentImplementation/KeyValueBaseService/atomicScan/Fault/ServiceNotInitializedException")
    })
    public ValueListImplArray atomicScan(
        @WebParam(name = "arg0", partName = "arg0")
        KeyImpl arg0,
        @WebParam(name = "arg1", partName = "arg1")
        KeyImpl arg1,
        @WebParam(name = "arg2", partName = "arg2")
        Predicate arg2)
        throws BeginGreaterThanEndException_Exception, IOException_Exception, ServiceNotInitializedException_Exception
    ;

    /**
     * 
     * @param arg0
     * @throws IOException_Exception
     * @throws ServiceNotInitializedException_Exception
     */
    @WebMethod
    @Action(input = "http://assignmentImplementation/KeyValueBaseService/bulkPutRequest", output = "http://assignmentImplementation/KeyValueBaseService/bulkPutResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://assignmentImplementation/KeyValueBaseService/bulkPut/Fault/IOException"),
        @FaultAction(className = ServiceNotInitializedException_Exception.class, value = "http://assignmentImplementation/KeyValueBaseService/bulkPut/Fault/ServiceNotInitializedException")
    })
    public void bulkPut(
        @WebParam(name = "arg0", partName = "arg0")
        BulkList arg0)
        throws IOException_Exception, ServiceNotInitializedException_Exception
    ;

    /**
     * 
     * @param arg0
     * @throws ServiceInitializingException_Exception
     * @throws ServiceAlreadyInitializedException_Exception
     * @throws FileNotFoundException_Exception
     */
    @WebMethod
    @Action(input = "http://assignmentImplementation/KeyValueBaseService/initRequest", output = "http://assignmentImplementation/KeyValueBaseService/initResponse", fault = {
        @FaultAction(className = ServiceAlreadyInitializedException_Exception.class, value = "http://assignmentImplementation/KeyValueBaseService/init/Fault/ServiceAlreadyInitializedException"),
        @FaultAction(className = ServiceInitializingException_Exception.class, value = "http://assignmentImplementation/KeyValueBaseService/init/Fault/ServiceInitializingException"),
        @FaultAction(className = FileNotFoundException_Exception.class, value = "http://assignmentImplementation/KeyValueBaseService/init/Fault/FileNotFoundException")
    })
    public void init(
        @WebParam(name = "arg0", partName = "arg0")
        String arg0)
        throws FileNotFoundException_Exception, ServiceAlreadyInitializedException_Exception, ServiceInitializingException_Exception
    ;

    /**
     * 
     * @param arg0
     * @throws ServiceNotInitializedException_Exception
     * @throws KeyNotFoundException_Exception
     */
    @WebMethod
    @Action(input = "http://assignmentImplementation/KeyValueBaseService/deleteRequest", output = "http://assignmentImplementation/KeyValueBaseService/deleteResponse", fault = {
        @FaultAction(className = KeyNotFoundException_Exception.class, value = "http://assignmentImplementation/KeyValueBaseService/delete/Fault/KeyNotFoundException"),
        @FaultAction(className = ServiceNotInitializedException_Exception.class, value = "http://assignmentImplementation/KeyValueBaseService/delete/Fault/ServiceNotInitializedException")
    })
    public void delete(
        @WebParam(name = "arg0", partName = "arg0")
        KeyImpl arg0)
        throws KeyNotFoundException_Exception, ServiceNotInitializedException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @throws IOException_Exception
     * @throws ServiceNotInitializedException_Exception
     * @throws KeyAlreadyPresentException_Exception
     */
    @WebMethod
    @Action(input = "http://assignmentImplementation/KeyValueBaseService/insertRequest", output = "http://assignmentImplementation/KeyValueBaseService/insertResponse", fault = {
        @FaultAction(className = KeyAlreadyPresentException_Exception.class, value = "http://assignmentImplementation/KeyValueBaseService/insert/Fault/KeyAlreadyPresentException"),
        @FaultAction(className = IOException_Exception.class, value = "http://assignmentImplementation/KeyValueBaseService/insert/Fault/IOException"),
        @FaultAction(className = ServiceNotInitializedException_Exception.class, value = "http://assignmentImplementation/KeyValueBaseService/insert/Fault/ServiceNotInitializedException")
    })
    public void insert(
        @WebParam(name = "arg0", partName = "arg0")
        KeyImpl arg0,
        @WebParam(name = "arg1", partName = "arg1")
        ValueListImpl arg1)
        throws IOException_Exception, KeyAlreadyPresentException_Exception, ServiceNotInitializedException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns assignmentimplementation.ValueListImpl
     * @throws IOException_Exception
     * @throws ServiceNotInitializedException_Exception
     * @throws KeyNotFoundException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://assignmentImplementation/KeyValueBaseService/readRequest", output = "http://assignmentImplementation/KeyValueBaseService/readResponse", fault = {
        @FaultAction(className = KeyNotFoundException_Exception.class, value = "http://assignmentImplementation/KeyValueBaseService/read/Fault/KeyNotFoundException"),
        @FaultAction(className = IOException_Exception.class, value = "http://assignmentImplementation/KeyValueBaseService/read/Fault/IOException"),
        @FaultAction(className = ServiceNotInitializedException_Exception.class, value = "http://assignmentImplementation/KeyValueBaseService/read/Fault/ServiceNotInitializedException")
    })
    public ValueListImpl read(
        @WebParam(name = "arg0", partName = "arg0")
        KeyImpl arg0)
        throws IOException_Exception, KeyNotFoundException_Exception, ServiceNotInitializedException_Exception
    ;

    /**
     * 
     * @param arg1
     * @param arg0
     * @throws IOException_Exception
     * @throws ServiceNotInitializedException_Exception
     * @throws KeyNotFoundException_Exception
     */
    @WebMethod
    @Action(input = "http://assignmentImplementation/KeyValueBaseService/updateRequest", output = "http://assignmentImplementation/KeyValueBaseService/updateResponse", fault = {
        @FaultAction(className = KeyNotFoundException_Exception.class, value = "http://assignmentImplementation/KeyValueBaseService/update/Fault/KeyNotFoundException"),
        @FaultAction(className = IOException_Exception.class, value = "http://assignmentImplementation/KeyValueBaseService/update/Fault/IOException"),
        @FaultAction(className = ServiceNotInitializedException_Exception.class, value = "http://assignmentImplementation/KeyValueBaseService/update/Fault/ServiceNotInitializedException")
    })
    public void update(
        @WebParam(name = "arg0", partName = "arg0")
        KeyImpl arg0,
        @WebParam(name = "arg1", partName = "arg1")
        ValueListImpl arg1)
        throws IOException_Exception, KeyNotFoundException_Exception, ServiceNotInitializedException_Exception
    ;

    /**
     * 
     * @param arg2
     * @param arg1
     * @param arg0
     * @return
     *     returns assignmentimplementation.ValueListImplArray
     * @throws BeginGreaterThanEndException_Exception
     * @throws IOException_Exception
     * @throws ServiceNotInitializedException_Exception
     */
    @WebMethod
    @WebResult(partName = "return")
    @Action(input = "http://assignmentImplementation/KeyValueBaseService/scanRequest", output = "http://assignmentImplementation/KeyValueBaseService/scanResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://assignmentImplementation/KeyValueBaseService/scan/Fault/IOException"),
        @FaultAction(className = BeginGreaterThanEndException_Exception.class, value = "http://assignmentImplementation/KeyValueBaseService/scan/Fault/BeginGreaterThanEndException"),
        @FaultAction(className = ServiceNotInitializedException_Exception.class, value = "http://assignmentImplementation/KeyValueBaseService/scan/Fault/ServiceNotInitializedException")
    })
    public ValueListImplArray scan(
        @WebParam(name = "arg0", partName = "arg0")
        KeyImpl arg0,
        @WebParam(name = "arg1", partName = "arg1")
        KeyImpl arg1,
        @WebParam(name = "arg2", partName = "arg2")
        Predicate arg2)
        throws BeginGreaterThanEndException_Exception, IOException_Exception, ServiceNotInitializedException_Exception
    ;

}
